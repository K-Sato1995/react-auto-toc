{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class Toc extends React.Component {\n  static propTypes = {\n    markdownText: PropTypes.string,\n    limit: PropTypes.number\n  }\n  stringReplacer(string, regex, mark) {\n    return string.replace(regex, mark)\n  }\n  createLink(string) {\n    var shapedString = string\n      .toLowerCase()\n      .replace(/#+\\s/, '#')\n      .trimRight()\n    var strArr = shapedString.split(' ')\n    var anchor = strArr.join('-')\n    return this.stringReplacer(anchor, /[?!]/g, '-')\n  }\n\n  trimString(string, limit) {\n    if (string.length >= limit) {\n      let slicedString = string.slice(0, limit)\n      return `${slicedString}..`\n    }\n    return string\n  }\n\n  returnTitle(string) {\n    const link = this.createLink(string)\n    const titleLimit = this.props.limit ? this.props.limit : 50\n    const title = this.trimString(\n      this.stringReplacer(string, /#+/g, ''),\n      titleLimit\n    )\n    return (\n      <a href={`${link}`} className='toc-title'>\n        {title}\n      </a>\n    )\n  }\n\n  createAnchorLink(string) {\n    if (/^#{1}\\s[\\s\\S]/.test(string)) {\n      return <li className='header1'>{this.returnTitle(string)}</li>\n    } else if (/^#{2}\\s[\\s\\S]/.test(string)) {\n      return <li className='header2'>{this.returnTitle(string)}</li>\n    } else if (/^#{3}\\s[\\s\\S]/.test(string)) {\n      return <li className='header3'>{this.returnTitle(string)}</li>\n    } else {\n      return ''\n    }\n  }\n\n  render() {\n    const regex = /#+\\s[\\u30a0-\\u30ff\\u3040-\\u309f\\u3005-\\u3006\\u30e0-\\u9fcf\\w\\s!?()//]+\\n/g\n    const codeRegex = /```*([\\s\\S]+?)```/g\n    const content = this.stringReplacer(this.props.markdownText, codeRegex, ' ')\n    let headers\n    if (typeof content === 'string') {\n      headers = content.match(regex)\n    }\n    const toc = headers.map(header => (\n      <span>{this.createAnchorLink(header)}</span>\n    ))\n    return (\n      <div>\n        <ul>{toc}</ul>\n      </div>\n    )\n  }\n}\n"],"names":["Toc","string","regex","mark","replace","shapedString","toLowerCase","trimRight","strArr","split","anchor","join","stringReplacer","limit","length","slicedString","slice","link","createLink","titleLimit","props","title","trimString","test","returnTitle","codeRegex","content","markdownText","headers","match","toc","map","createAnchorLink","header","React","Component","propTypes","PropTypes","number"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAGqBA;;;;;;;;;;mCAKJC,QAAQC,OAAOC,MAAM;aAC3BF,OAAOG,OAAP,CAAeF,KAAf,EAAsBC,IAAtB,CAAP;;;;+BAESF,QAAQ;UACbI,eAAeJ,OAChBK,WADgB,GAEhBF,OAFgB,CAER,MAFQ,EAEA,GAFA,EAGhBG,SAHgB,EAAnB;UAIIC,SAASH,aAAaI,KAAb,CAAmB,GAAnB,CAAb;UACIC,SAASF,OAAOG,IAAP,CAAY,GAAZ,CAAb;aACO,KAAKC,cAAL,CAAoBF,MAApB,EAA4B,OAA5B,EAAqC,GAArC,CAAP;;;;+BAGST,QAAQY,OAAO;UACpBZ,OAAOa,MAAP,IAAiBD,KAArB,EAA4B;YACtBE,eAAed,OAAOe,KAAP,CAAa,CAAb,EAAgBH,KAAhB,CAAnB;eACUE,YAAV;;aAEKd,MAAP;;;;gCAGUA,QAAQ;UACZgB,OAAO,KAAKC,UAAL,CAAgBjB,MAAhB,CAAb;UACMkB,aAAa,KAAKC,KAAL,CAAWP,KAAX,GAAmB,KAAKO,KAAL,CAAWP,KAA9B,GAAsC,EAAzD;UACMQ,QAAQ,KAAKC,UAAL,CACZ,KAAKV,cAAL,CAAoBX,MAApB,EAA4B,KAA5B,EAAmC,EAAnC,CADY,EAEZkB,UAFY,CAAd;aAKE;;UAAG,WAASF,IAAZ,EAAoB,WAAU,WAA9B;;OADF;;;;qCAOehB,QAAQ;UACnB,gBAAgBsB,IAAhB,CAAqBtB,MAArB,CAAJ,EAAkC;eACzB;;YAAI,WAAU,SAAd;eAA8BuB,WAAL,CAAiBvB,MAAjB;SAAhC;OADF,MAEO,IAAI,gBAAgBsB,IAAhB,CAAqBtB,MAArB,CAAJ,EAAkC;eAChC;;YAAI,WAAU,SAAd;eAA8BuB,WAAL,CAAiBvB,MAAjB;SAAhC;OADK,MAEA,IAAI,gBAAgBsB,IAAhB,CAAqBtB,MAArB,CAAJ,EAAkC;eAChC;;YAAI,WAAU,SAAd;eAA8BuB,WAAL,CAAiBvB,MAAjB;SAAhC;OADK,MAEA;eACE,EAAP;;;;;6BAIK;;;UACDC,QAAQ,0EAAd;UACMuB,YAAY,oBAAlB;UACMC,UAAU,KAAKd,cAAL,CAAoB,KAAKQ,KAAL,CAAWO,YAA/B,EAA6CF,SAA7C,EAAwD,GAAxD,CAAhB;UACIG,gBAAJ;UACI,OAAOF,OAAP,KAAmB,QAAvB,EAAiC;kBACrBA,QAAQG,KAAR,CAAc3B,KAAd,CAAV;;UAEI4B,MAAMF,QAAQG,GAAR,CAAY;eACtB;;;iBAAYC,gBAAL,CAAsBC,MAAtB;SADe;OAAZ,CAAZ;aAIE;;;;;;;;OADF;;;;EA/D6BC,MAAMC;;AAAlBnC,IACZoC,YAAY;gBACHC,UAAUpC,MADP;SAEVoC,UAAUC;;;;;"}